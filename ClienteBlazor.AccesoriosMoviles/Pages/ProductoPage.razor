@page "/productos"
@using Models
@using Services
@inject IProductoService ProductoService

<MudText Typo="Typo.h4">Productos</MudText>

@if (productos == null)
{
<p>Cargando...</p> }
            else
            {
<MudGrid>
    @foreach (var item in productos)
    {
<MudItem xs="12" sm="10" md="6" lg="4">
    <MudCard>
        <MudCardHeader Class="blue lighten-1">
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@item.Nombre</MudText>
            </CardHeaderContent>
        </MudCardHeader>
       

            <MudCardHeader Class="blue lighten-2">
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@item.Precio</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            

                <MudCardHeader Class="blue lighten-3">
                    <CardHeaderContent>
                        @*<MudText Typo="Typo.h6">@item.Imagen</MudText>*@
                        <img src="@item.Imagen" alt="Imagen del producto" />
                    </CardHeaderContent>
                </MudCardHeader>
               

                    <MudCardHeader Class="blue lighten-4">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@item.Descripcion</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>

                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Link="@($"/detalles/{item.Id}")" Variant="Variant.Outlined" Color="Color.Success">Detalles</MudButton>
                    </MudCardActions>
</MudCard>
</MudItem>}
</MudGrid>}


@code { IEnumerable<Producto> productos = new List<Producto>();

            protected override async Task OnInitializedAsync()
            {
                productos = await ProductoService.GetAll();
            } }